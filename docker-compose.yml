version: "3"

services:
  redis:
    image: redis
    container_name: redis_architect_container
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: redis
    command: ["redis-server", "--requirepass", "$$REDIS_PASSWORD"]
    volumes:
      - redis_data:/data

  mongo:
    image: mongo
    container_name: mongo_container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin  
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo_web_container
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://admin:admin@mongo:27017/
      ME_CONFIG_BASICAUTH: "false"  # Логическое значение в кавычках
    depends_on:
      - mongo  # Зависимость от MongoDB

  neo4j:
    image: neo4j
    container_name: neo4j_container
    restart: always
    environment:
      NEO4J_AUTH: none
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"  # Для использования официального образа
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data

  elasticsearch:
    image: elasticsearch:8.12.2  # Указание версии для стабильности
    container_name: elasticsearch_container
    restart: always
    environment:
      ELASTIC_PASSWORD: root
      discovery.type: single-node  # Обязательная настройка для одного узла
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  postgres:
    image: postgres
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: admin  
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: admin  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  redis_data:
  mongo_data:
  neo4j_data:
  elasticsearch_data:
  postgres_data: