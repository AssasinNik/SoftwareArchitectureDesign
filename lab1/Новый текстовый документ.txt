zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app_net

  kafka:
    image: confluentinc/cp-server:7.2.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - app_net

  kafka-connect:
    image: debezium/connect:2.2
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
    ports:
      - "8085:8083"
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: '1'
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      PLUGINS: 'wal2json'
    networks:
      - app_net  
    
  connector-setup:
    image: curlimages/curl:7.87.0
    container_name: connector-setup
    depends_on:
      - kafka-connect
    entrypoint: 
      - sh
      - -c
      - |
        echo 'Waiting for Kafka Connect to start...';
        until curl -s http://kafka-connect:8083/connectors; do
          sleep 5;
        done;
        echo 'Kafka Connect is ready. Registering connector...';
        curl -X POST http://kafka-connect:8083/connectors \
          -H 'Content-Type: application/json' \
          --data @/connectors/postgres.json \
          --fail || echo 'Failed to register connector';
        sleep 5
    volumes:
      - ./connectors/postgres.json:/connectors/postgres.json:ro
    networks:
      - app_net
  
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8086:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - app_net